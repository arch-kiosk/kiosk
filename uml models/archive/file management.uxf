<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>62</x><y>48</y><w>250</w><h>380</h></coordinates><panel_attributes>**FileRepository**
--
 __init__(conf, event_manager)
get_path
get_thumbnail_dir
__**add_file_to_repository**__

ensure_thumbnail_dirs
delete_files
copyfile
invalidate_cache_files
refresh_image_thumbnail
create_image_thumbnails
find_broken_files
select_files_from_repository
get_file_repository_filename
get_file_field_tables
get_actual_file_references
get_file_by_hash
replace_file_in_repository
delete_file_from_repository
get_thumbnail
get_best_thumbnail
get_file_fields_with_description_fields
get_repository_path_for_file
get_repository_filename_and_path
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>352</x><y>48</y><w>120</w><h>110</h></coordinates><panel_attributes>**EventManager**
--
 __init__
get_event_handler
subscribe
fire_event
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>302</x><y>78</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;50;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1012</x><y>498</y><w>100</w><h>130</h></coordinates><panel_attributes>**TypeRepository**
--
+ repository
--
 __init__
register_type
get_type
list_types
create_type

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>452</x><y>247</y><w>470</w><h>270</h></coordinates><panel_attributes>**KioskLogicalFile**
**KioskCachedFile**
--
 __init__(uid, sqlalchemy_session, cache_manager, file_repository, type_repository)
set_cache_manager
set_file_repository
set_type_repository
get
get_representation





--

_get_file_record
_record_exists
_file_exists
_get_representation_from_cache
_get_filename
_create_representation
_cache_manager
_file_record
_file_repository
_file_repository_file
_sqlalchemy_session
_type_repository
_uid</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>297</y><w>120</w><h>260</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;100;240</additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>197</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>522</x><y>27</y><w>460</w><h>180</h></coordinates><panel_attributes>KioskFileCache
--
  __init__(cache_base_dir, sqlalchemy_session, representation_repository)
install_representation_repository
add
validate
invalidate
is_valid
get
delete_from_cache
delete_representation_type
rebuild_cache
--
_get_cache_entry
_get_cache_entries
_get_cache_filename
_get_representation_type_by_name
_invalidate_all_entries
_cache_base_dir
_representation_repository
sqlalchemy_session</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>557</y><w>240</w><h>220</h></coordinates><panel_attributes>**/KioskPhysicalFile/**
--
  __init__
@get_supported_file_extensions
@can_convert_to
@can_open
@register
--
supports
supports_method
supports_manipulation
convert_to
--
+ supported_file_formats
+ supported_manipulations
+ supported_methods
--
_manipulations_supported
_register_file_formats
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>550</x><y>507</y><w>100</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;50;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>750</x><y>717</y><w>230</w><h>110</h></coordinates><panel_attributes>**KioskPhysicalFileFactory**
--
  __init__(TypeRepository, priority_func)
get
- priority_func
- type_repository
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>850</x><y>507</y><w>30</w><h>230</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;210;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>900</x><y>560</y><w>130</w><h>180</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;160;110;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>900</y><w>270</w><h>180</h></coordinates><panel_attributes>**KioskPhysicalPillowFile**
--
__init__(source_file)
convert_to
--
+ source_path_and_filename
+ output_formats
+ supported_file_formats
+ supported_manipulations
+ supported_methods
--
_open_image
_fix_rotation
_downscale
_save_image
_post_conversion
_convert_to
_manipulations_supported
_register_file_formats
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>440</x><y>770</y><w>130</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>110;10;10;130</additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>780</y><w>300</w><h>200</h></coordinates><panel_attributes>lt=&lt;-
creates</panel_attributes><additional_attributes>10;180;280;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>20</x><y>0</y><w>1380</w><h>830</h></coordinates><panel_attributes>Core</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>190</x><y>860</y><w>330</w><h>370</h></coordinates><panel_attributes>Plugin defaultfilehandling
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>230</x><y>1150</y><w>190</w><h>60</h></coordinates><panel_attributes>**KioskPhysicalPillowNefFile**
--
+ supported_file_formats
+ supported_manipulations
-
_open_image

group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>1070</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>790</y><w>360</w><h>420</h></coordinates><panel_attributes>lt=&lt;-
creates</panel_attributes><additional_attributes>10;400;340;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>750</x><y>860</y><w>330</w><h>160</h></coordinates><panel_attributes>Plugin heicfilehandling

group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>760</x><y>950</y><w>250</w><h>60</h></coordinates><panel_attributes>**KioskPhysicalHeicFile**
--
 __init__(src_file=
convert_to
--
_open_image
_fix_rotation
_downscale
_save_image
_post_conversion
_convert_to
--
+ output_formats
+ source_path_and_filename
+ supported_file_formats
+ supported_manipulations
+ supported_methods

group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>770</y><w>240</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;220;180</additional_attributes></element><element><id>Relation</id><coordinates><x>870</x><y>810</y><w>90</w><h>160</h></coordinates><panel_attributes>lt=&lt;-
creates</panel_attributes><additional_attributes>50;140;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>112</x><y>457</y><w>250</w><h>230</h></coordinates><panel_attributes>**KioskContextualFile**
bg=yellow
fg=black
--
 __init__()
upload(src_file, backup_old, create_uid)
_check_md5_hash()
_check_archaeological_context()
get_tags()





</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>182</x><y>727</y><w>250</w><h>90</h></coordinates><panel_attributes>/**KioskContext**/
bg=yellow
fg=black
--





group=3</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>230</x><y>670</y><w>100</w><h>80</h></coordinates><panel_attributes>lt=&lt;-
m1=0..n</panel_attributes><additional_attributes>80;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>320</x><y>290</y><w>160</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>132;10;10;170</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>710</y><w>180</w><h>90</h></coordinates><panel_attributes>Note..
This is rather a future thought.
For the time being 
KioskContextualFile 
will do it all
group=3</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1022</x><y>38</y><w>340</w><h>220</h></coordinates><panel_attributes>**KioskRepresentationType**
--
 __init__(unique_name)
get_all_manipulations()
from_file_handling_rule(rule: dict)
get_requested_output_format(src_format: str)
--
unique_name: str
dimensions: KioskRepresentationTypeDimensions
format_request : dict = {"*": "*"}
method : str
label :str 
required_manipulations : []
requested_manipulations : []
inherits : str

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1352</x><y>47</y><w>60</w><h>220</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;40;10;40;200;10;200</additional_attributes></element></diagram>